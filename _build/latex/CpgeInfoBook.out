\BOOKMARK [0][-]{chapter.1}{Arbres\040binaires}{}% 1
\BOOKMARK [1][-]{section.1.1}{Définition formelle d’un arbre binaire}{chapter.1}% 2
\BOOKMARK [0][-]{chapter.2}{Arbres\040Binaires\040de\040Recherche}{}% 3
\BOOKMARK [1][-]{section.2.1}{Insertion\040et\040suppression}{chapter.2}% 4
\BOOKMARK [2][-]{subsection.2.1.1}{1.\040Insertion\040et\040suppression\040dans\040un\040arbre\040binaire\040de\040recherche\040quelconque}{section.2.1}% 5
\BOOKMARK [3][-]{subsubsection*.3}{Insertion}{subsection.2.1.1}% 6
\BOOKMARK [2][-]{subsection.2.1.2}{Suppression}{section.2.1}% 7
\BOOKMARK [3][-]{subsubsection*.4}{Supprission\040de\040la\040valeur\040minimale}{subsection.2.1.2}% 8
\BOOKMARK [1][-]{section.2.2}{Requêtes dans un arbre binaire de recherche}{chapter.2}% 9
\BOOKMARK [2][-]{subsection.2.2.1}{Recherche d’une clé}{section.2.2}% 10
\BOOKMARK [2][-]{subsection.2.2.2}{2.1 Recherche de la clé minimale / maximale}{section.2.2}% 11
\BOOKMARK [2][-]{subsection.2.2.3}{Recherche du prédécesseur / successeur}{section.2.2}% 12
\BOOKMARK [2][-]{subsection.2.2.4}{Complexité temporelle}{section.2.2}% 13
\BOOKMARK [0][-]{chapter.3}{Programmation\040dynamique}{}% 14
\BOOKMARK [1][-]{section.3.1}{Introduction}{chapter.3}% 15
\BOOKMARK [2][-]{subsection.3.1.1}{Un inconvénient de la programmation récursive}{section.3.1}% 16
\BOOKMARK [1][-]{section.3.2}{Où est le problème ?}{chapter.3}% 17
\BOOKMARK [1][-]{section.3.3}{Une solution proposée par la programmation dynamique de type \(Bottom UP\)}{chapter.3}% 18
\BOOKMARK [1][-]{section.3.4}{Une solution proposée par la programmation dynamique de type \(Top Down\)}{chapter.3}% 19
\BOOKMARK [0][-]{chapter.4}{Programmation\040Dynamique\040et\040optimisation}{}% 20
\BOOKMARK [1][-]{section.4.1}{Démarche de résoluton}{chapter.4}% 21
\BOOKMARK [1][-]{section.4.2}{Exemple: Problème Sac à Dos.}{chapter.4}% 22
\BOOKMARK [2][-]{subsection.4.2.1}{La solution dynamique avec la programmation dynamique par la méthode Bottom_UP}{section.4.2}% 23
\BOOKMARK [2][-]{subsection.4.2.2}{La solution dynamique avec la programmation dynamique par la méthode Top_Down}{section.4.2}% 24
\BOOKMARK [2][-]{subsection.4.2.3}{La solution linéaire avec la programmation gloutoune}{section.4.2}% 25
\BOOKMARK [0][-]{chapter.5}{Les\040algorithmes\040gloutons}{}% 26
\BOOKMARK [1][-]{section.5.1}{Introduction}{chapter.5}% 27
\BOOKMARK [1][-]{section.5.2}{Définition: Algorithme Heuristiques :}{chapter.5}% 28
\BOOKMARK [1][-]{section.5.3}{Définition: Algorithme glouton}{chapter.5}% 29
\BOOKMARK [0][-]{chapter.6}{TRAITEMENT\040DES\040IMAGES}{}% 30
\BOOKMARK [1][-]{section.6.1}{Caractéristiques d’une image}{chapter.6}% 31
\BOOKMARK [2][-]{subsection.6.1.1}{Les\040pixels}{section.6.1}% 32
\BOOKMARK [2][-]{subsection.6.1.2}{Le\040format\040RGB}{section.6.1}% 33
\BOOKMARK [2][-]{subsection.6.1.3}{Transparence\040et\040Canal\040Alpha}{section.6.1}% 34
\BOOKMARK [2][-]{subsection.6.1.4}{Chargement de l’image}{section.6.1}% 35
\BOOKMARK [3][-]{subsubsection*.5}{La taille de l’image}{subsection.6.1.4}% 36
\BOOKMARK [3][-]{subsubsection*.6}{Affichage d’une image}{subsection.6.1.4}% 37
\BOOKMARK [3][-]{subsubsection*.7}{Recadrer l’image}{subsection.6.1.4}% 38
\BOOKMARK [2][-]{subsection.6.1.5}{Modification d’une image}{section.6.1}% 39
\BOOKMARK [1][-]{section.6.2}{Traitements basiques de l’image}{chapter.6}% 40
\BOOKMARK [2][-]{subsection.6.2.1}{Inversion}{section.6.2}% 41
\BOOKMARK [3][-]{subsubsection*.8}{Ajouter un réctangle}{subsection.6.2.1}% 42
\BOOKMARK [2][-]{subsection.6.2.2}{Retournement}{section.6.2}% 43
\BOOKMARK [3][-]{subsubsection*.9}{Miroire}{subsection.6.2.2}% 44
\BOOKMARK [2][-]{subsection.6.2.3}{Passage\040en\040niveaux\040de\040gris}{section.6.2}% 45
\BOOKMARK [3][-]{subsubsection*.10}{Modification\040du\040contraste}{subsection.6.2.3}% 46
\BOOKMARK [2][-]{subsection.6.2.4}{Histogramme d’une image}{section.6.2}% 47
\BOOKMARK [2][-]{subsection.6.2.5}{Seuillage\040fixe}{section.6.2}% 48
\BOOKMARK [2][-]{subsection.6.2.6}{Rotation d’images}{section.6.2}% 49
\BOOKMARK [1][-]{section.6.3}{Application\040de\040filtres}{chapter.6}% 50
\BOOKMARK [2][-]{subsection.6.3.1}{Flou\040ou\040Filtre\040moyenneur}{section.6.3}% 51
\BOOKMARK [2][-]{subsection.6.3.2}{Détection de contours}{section.6.3}% 52
\BOOKMARK [3][-]{subsubsection*.11}{Concolution\040et\040filtre\040Moyenneur}{subsection.6.3.2}% 53
\BOOKMARK [2][-]{subsection.6.3.3}{Détection des contours}{section.6.3}% 54
\BOOKMARK [0][-]{chapter.7}{Algorithme\040KNN:\040Cours}{}% 55
\BOOKMARK [1][-]{section.7.1}{Classification supervisée}{chapter.7}% 56
\BOOKMARK [1][-]{section.7.2}{La\040notion\040de\040distance:}{chapter.7}% 57
\BOOKMARK [1][-]{section.7.3}{Principe de l’algorithme}{chapter.7}% 58
\BOOKMARK [1][-]{section.7.4}{Mise en place de chaque étape}{chapter.7}% 59
\BOOKMARK [2][-]{subsection.7.4.1}{Mesure\040des\040distances}{section.7.4}% 60
\BOOKMARK [2][-]{subsection.7.4.2}{Déterminer les k plus proches voisins}{section.7.4}% 61
\BOOKMARK [2][-]{subsection.7.4.3}{Choisir la classe la plus fréquente}{section.7.4}% 62
\BOOKMARK [2][-]{subsection.7.4.4}{Prédire la Sortie d’une nouvelle donnée}{section.7.4}% 63
\BOOKMARK [2][-]{subsection.7.4.5}{Matrice\040de\040confusion}{section.7.4}% 64
\BOOKMARK [0][-]{chapter.8}{Tp\040Iris}{}% 65
\BOOKMARK [1][-]{section.8.1}{Question\0401}{chapter.8}% 66
\BOOKMARK [0][-]{chapter*.12}{Bibliography}{}% 67
